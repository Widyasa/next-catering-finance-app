// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model ProductCategories {
  id        String     @id @default(uuid())
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  products  Products[]
}

model Products {
  id          String            @id @default(uuid())
  name        String            @unique
  price       Int
  description String            @db.Text
  category_id String
  category    ProductCategories @relation(fields: [category_id], references: [id])
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  OrderDetail OrderDetail[]
}

model Users {
  id        String   @id @default(uuid())
  name      String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  pending
  confirmed
  canceled
  finished
}

model Orders {
  id               String        @id @default(uuid())
  date             String
  customer_name    String
  customer_phone   String
  customer_address String        @db.Text
  total_price      Int
  total_income     Int
  status           OrderStatus   @default(pending)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  orderDetails     OrderDetail[]
}

model OrderDetail {
  id         String   @id @default(uuid())
  order_id   String
  product_id String
  quantity   Int
  price      Int
  order      Orders   @relation(fields: [order_id], references: [id])
  product    Products @relation(fields: [product_id], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model OrderOutcome {
  id          String   @id @default(uuid())
  order_id    String
  name        String
  description String   @db.Text
  date        String
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
